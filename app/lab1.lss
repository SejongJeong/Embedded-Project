
lab1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000108  00800100  00000f04  00000f98  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000f04  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000002a8  00800208  00800208  000010a0  2**0
                  ALLOC
  3 .stab         00000378  00000000  00000000  000010a0  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000055  00000000  00000000  00001418  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
   4:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
   8:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
   c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  10:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  14:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  18:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  1c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  20:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  24:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  28:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  2c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  30:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  34:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  38:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  3c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  40:	0c 94 de 06 	jmp	0xdbc	; 0xdbc <OSTickISR>
  44:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  48:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  4c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  50:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  54:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  58:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  5c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  60:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  64:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  68:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  6c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  70:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  74:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  78:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  7c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  80:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  84:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
  88:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	12 e0       	ldi	r17, 0x02	; 2
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e4 e0       	ldi	r30, 0x04	; 4
  a0:	ff e0       	ldi	r31, 0x0F	; 15
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a8 30       	cpi	r26, 0x08	; 8
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	14 e0       	ldi	r17, 0x04	; 4
  b4:	a8 e0       	ldi	r26, 0x08	; 8
  b6:	b2 e0       	ldi	r27, 0x02	; 2
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a0 3b       	cpi	r26, 0xB0	; 176
  be:	b1 07       	cpc	r27, r17
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	0e 94 94 00 	call	0x128	; 0x128 <main>
  c6:	0c 94 80 07 	jmp	0xf00	; 0xf00 <_exit>

000000ca <__bad_interrupt>:
  ca:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ce <LedTask>:
  ce:	8f ef       	ldi	r24, 0xFF	; 255
  d0:	8a bb       	out	0x1a, r24	; 26
  d2:	60 e0       	ldi	r22, 0x00	; 0
  d4:	70 e0       	ldi	r23, 0x00	; 0
  d6:	e1 e0       	ldi	r30, 0x01	; 1
  d8:	40 e9       	ldi	r20, 0x90	; 144
  da:	51 e0       	ldi	r21, 0x01	; 1
  dc:	67 30       	cpi	r22, 0x07	; 7
  de:	71 05       	cpc	r23, r1
  e0:	94 f0       	brlt	.+36     	; 0x106 <LedTask+0x38>
  e2:	60 e0       	ldi	r22, 0x00	; 0
  e4:	70 e0       	ldi	r23, 0x00	; 0
  e6:	eb bb       	out	0x1b, r30	; 27
  e8:	20 ed       	ldi	r18, 0xD0	; 208
  ea:	37 e0       	ldi	r19, 0x07	; 7
  ec:	ca 01       	movw	r24, r20
  ee:	01 97       	sbiw	r24, 0x01	; 1
  f0:	f1 f7       	brne	.-4      	; 0xee <LedTask+0x20>
  f2:	21 50       	subi	r18, 0x01	; 1
  f4:	30 40       	sbci	r19, 0x00	; 0
  f6:	d1 f7       	brne	.-12     	; 0xec <LedTask+0x1e>
  f8:	6f 5f       	subi	r22, 0xFF	; 255
  fa:	7f 4f       	sbci	r23, 0xFF	; 255
  fc:	67 30       	cpi	r22, 0x07	; 7
  fe:	71 05       	cpc	r23, r1
 100:	79 f0       	breq	.+30     	; 0x120 <LedTask+0x52>
 102:	e6 95       	lsr	r30
 104:	f0 cf       	rjmp	.-32     	; 0xe6 <LedTask+0x18>
 106:	eb bb       	out	0x1b, r30	; 27
 108:	20 ed       	ldi	r18, 0xD0	; 208
 10a:	37 e0       	ldi	r19, 0x07	; 7
 10c:	ca 01       	movw	r24, r20
 10e:	01 97       	sbiw	r24, 0x01	; 1
 110:	f1 f7       	brne	.-4      	; 0x10e <LedTask+0x40>
 112:	21 50       	subi	r18, 0x01	; 1
 114:	30 40       	sbci	r19, 0x00	; 0
 116:	d1 f7       	brne	.-12     	; 0x10c <LedTask+0x3e>
 118:	ee 0f       	add	r30, r30
 11a:	6f 5f       	subi	r22, 0xFF	; 255
 11c:	7f 4f       	sbci	r23, 0xFF	; 255
 11e:	de cf       	rjmp	.-68     	; 0xdc <LedTask+0xe>
 120:	60 e0       	ldi	r22, 0x00	; 0
 122:	70 e0       	ldi	r23, 0x00	; 0
 124:	e1 e0       	ldi	r30, 0x01	; 1
 126:	da cf       	rjmp	.-76     	; 0xdc <LedTask+0xe>

00000128 <main>:
 128:	0e 94 94 05 	call	0xb28	; 0xb28 <OSInit>
 12c:	f8 94       	cli
 12e:	87 e0       	ldi	r24, 0x07	; 7
 130:	83 bf       	out	0x33, r24	; 51
 132:	81 e0       	ldi	r24, 0x01	; 1
 134:	87 bf       	out	0x37, r24	; 55
 136:	84 e6       	ldi	r24, 0x64	; 100
 138:	82 bf       	out	0x32, r24	; 50
 13a:	78 94       	sei
 13c:	87 e6       	ldi	r24, 0x67	; 103
 13e:	90 e0       	ldi	r25, 0x00	; 0
 140:	60 e0       	ldi	r22, 0x00	; 0
 142:	70 e0       	ldi	r23, 0x00	; 0
 144:	47 e8       	ldi	r20, 0x87	; 135
 146:	52 e0       	ldi	r21, 0x02	; 2
 148:	20 e0       	ldi	r18, 0x00	; 0
 14a:	0e 94 f1 03 	call	0x7e2	; 0x7e2 <OSTaskCreate>
 14e:	0e 94 14 05 	call	0xa28	; 0xa28 <OSStart>
 152:	80 e0       	ldi	r24, 0x00	; 0
 154:	90 e0       	ldi	r25, 0x00	; 0
 156:	08 95       	ret

00000158 <OSTaskStkInit>:
 158:	fa 01       	movw	r30, r20
 15a:	80 83       	st	Z, r24
 15c:	92 93       	st	-Z, r25
 15e:	12 92       	st	-Z, r1
 160:	12 92       	st	-Z, r1
 162:	12 92       	st	-Z, r1
 164:	12 92       	st	-Z, r1
 166:	12 92       	st	-Z, r1
 168:	12 92       	st	-Z, r1
 16a:	12 92       	st	-Z, r1
 16c:	12 92       	st	-Z, r1
 16e:	12 92       	st	-Z, r1
 170:	12 92       	st	-Z, r1
 172:	12 92       	st	-Z, r1
 174:	12 92       	st	-Z, r1
 176:	12 92       	st	-Z, r1
 178:	12 92       	st	-Z, r1
 17a:	12 92       	st	-Z, r1
 17c:	12 92       	st	-Z, r1
 17e:	12 92       	st	-Z, r1
 180:	12 92       	st	-Z, r1
 182:	12 92       	st	-Z, r1
 184:	12 92       	st	-Z, r1
 186:	12 92       	st	-Z, r1
 188:	12 92       	st	-Z, r1
 18a:	12 92       	st	-Z, r1
 18c:	12 92       	st	-Z, r1
 18e:	62 93       	st	-Z, r22
 190:	72 93       	st	-Z, r23
 192:	12 92       	st	-Z, r1
 194:	12 92       	st	-Z, r1
 196:	12 92       	st	-Z, r1
 198:	12 92       	st	-Z, r1
 19a:	12 92       	st	-Z, r1
 19c:	12 92       	st	-Z, r1
 19e:	12 92       	st	-Z, r1
 1a0:	80 e8       	ldi	r24, 0x80	; 128
 1a2:	82 93       	st	-Z, r24
 1a4:	31 97       	sbiw	r30, 0x01	; 1
 1a6:	cf 01       	movw	r24, r30
 1a8:	08 95       	ret

000001aa <OSTaskCreateHook>:
 1aa:	08 95       	ret

000001ac <OSTaskDelHook>:
 1ac:	08 95       	ret

000001ae <OSTaskSwHook>:
 1ae:	08 95       	ret

000001b0 <OSTaskStatHook>:
 1b0:	08 95       	ret

000001b2 <OSTimeTickHook>:
 1b2:	08 95       	ret

000001b4 <OSInitHookBegin>:
 1b4:	08 95       	ret

000001b6 <OSInitHookEnd>:
 1b6:	08 95       	ret

000001b8 <OSTaskIdleHook>:
 1b8:	08 95       	ret

000001ba <OSTCBInitHook>:
 1ba:	08 95       	ret

000001bc <OSIntEnter>:
 1bc:	80 91 89 02 	lds	r24, 0x0289
 1c0:	81 30       	cpi	r24, 0x01	; 1
 1c2:	09 f0       	breq	.+2      	; 0x1c6 <OSIntEnter+0xa>
 1c4:	08 95       	ret
 1c6:	80 91 26 03 	lds	r24, 0x0326
 1ca:	8f 3f       	cpi	r24, 0xFF	; 255
 1cc:	d9 f3       	breq	.-10     	; 0x1c4 <OSIntEnter+0x8>
 1ce:	8f 5f       	subi	r24, 0xFF	; 255
 1d0:	80 93 26 03 	sts	0x0326, r24
 1d4:	08 95       	ret

000001d6 <OSSchedLock>:
 1d6:	80 91 89 02 	lds	r24, 0x0289
 1da:	81 30       	cpi	r24, 0x01	; 1
 1dc:	09 f0       	breq	.+2      	; 0x1e0 <OSSchedLock+0xa>
 1de:	08 95       	ret
 1e0:	f8 94       	cli
 1e2:	80 91 88 02 	lds	r24, 0x0288
 1e6:	8f 3f       	cpi	r24, 0xFF	; 255
 1e8:	19 f0       	breq	.+6      	; 0x1f0 <OSSchedLock+0x1a>
 1ea:	8f 5f       	subi	r24, 0xFF	; 255
 1ec:	80 93 88 02 	sts	0x0288, r24
 1f0:	78 94       	sei
 1f2:	08 95       	ret

000001f4 <OSVersion>:
 1f4:	8c ef       	ldi	r24, 0xFC	; 252
 1f6:	90 e0       	ldi	r25, 0x00	; 0
 1f8:	08 95       	ret

000001fa <OS_EventTaskRdy>:
 1fa:	1f 93       	push	r17
 1fc:	cf 93       	push	r28
 1fe:	df 93       	push	r29
 200:	ec 01       	movw	r28, r24
 202:	14 2f       	mov	r17, r20
 204:	39 81       	ldd	r19, Y+1	; 0x01
 206:	e3 2f       	mov	r30, r19
 208:	f0 e0       	ldi	r31, 0x00	; 0
 20a:	e8 5f       	subi	r30, 0xF8	; 248
 20c:	fe 4f       	sbci	r31, 0xFE	; 254
 20e:	20 81       	ld	r18, Z
 210:	62 2f       	mov	r22, r18
 212:	70 e0       	ldi	r23, 0x00	; 0
 214:	fb 01       	movw	r30, r22
 216:	e0 50       	subi	r30, 0x00	; 0
 218:	ff 4f       	sbci	r31, 0xFF	; 255
 21a:	40 81       	ld	r20, Z
 21c:	dc 01       	movw	r26, r24
 21e:	a6 0f       	add	r26, r22
 220:	b7 1f       	adc	r27, r23
 222:	16 96       	adiw	r26, 0x06	; 6
 224:	9c 91       	ld	r25, X
 226:	16 97       	sbiw	r26, 0x06	; 6
 228:	e9 2f       	mov	r30, r25
 22a:	f0 e0       	ldi	r31, 0x00	; 0
 22c:	e8 5f       	subi	r30, 0xF8	; 248
 22e:	fe 4f       	sbci	r31, 0xFE	; 254
 230:	80 81       	ld	r24, Z
 232:	e8 2f       	mov	r30, r24
 234:	f0 e0       	ldi	r31, 0x00	; 0
 236:	e0 50       	subi	r30, 0x00	; 0
 238:	ff 4f       	sbci	r31, 0xFF	; 255
 23a:	50 81       	ld	r21, Z
 23c:	22 0f       	add	r18, r18
 23e:	22 0f       	add	r18, r18
 240:	22 0f       	add	r18, r18
 242:	28 0f       	add	r18, r24
 244:	85 2f       	mov	r24, r21
 246:	80 95       	com	r24
 248:	89 23       	and	r24, r25
 24a:	16 96       	adiw	r26, 0x06	; 6
 24c:	8c 93       	st	X, r24
 24e:	88 23       	and	r24, r24
 250:	21 f4       	brne	.+8      	; 0x25a <OS_EventTaskRdy+0x60>
 252:	84 2f       	mov	r24, r20
 254:	80 95       	com	r24
 256:	38 23       	and	r19, r24
 258:	39 83       	std	Y+1, r19	; 0x01
 25a:	e2 2f       	mov	r30, r18
 25c:	f0 e0       	ldi	r31, 0x00	; 0
 25e:	ee 0f       	add	r30, r30
 260:	ff 1f       	adc	r31, r31
 262:	ee 56       	subi	r30, 0x6E	; 110
 264:	fb 4f       	sbci	r31, 0xFB	; 251
 266:	01 90       	ld	r0, Z+
 268:	f0 81       	ld	r31, Z
 26a:	e0 2d       	mov	r30, r0
 26c:	11 86       	std	Z+9, r1	; 0x09
 26e:	10 86       	std	Z+8, r1	; 0x08
 270:	17 82       	std	Z+7, r1	; 0x07
 272:	16 82       	std	Z+6, r1	; 0x06
 274:	81 2f       	mov	r24, r17
 276:	80 95       	com	r24
 278:	92 85       	ldd	r25, Z+10	; 0x0a
 27a:	89 23       	and	r24, r25
 27c:	82 87       	std	Z+10, r24	; 0x0a
 27e:	88 23       	and	r24, r24
 280:	59 f4       	brne	.+22     	; 0x298 <OS_EventTaskRdy+0x9e>
 282:	80 91 20 03 	lds	r24, 0x0320
 286:	84 2b       	or	r24, r20
 288:	80 93 20 03 	sts	0x0320, r24
 28c:	fb 01       	movw	r30, r22
 28e:	ef 5d       	subi	r30, 0xDF	; 223
 290:	fc 4f       	sbci	r31, 0xFC	; 252
 292:	80 81       	ld	r24, Z
 294:	58 2b       	or	r21, r24
 296:	50 83       	st	Z, r21
 298:	82 2f       	mov	r24, r18
 29a:	df 91       	pop	r29
 29c:	cf 91       	pop	r28
 29e:	1f 91       	pop	r17
 2a0:	08 95       	ret

000002a2 <OS_EventTaskWait>:
 2a2:	cf 93       	push	r28
 2a4:	df 93       	push	r29
 2a6:	ec 01       	movw	r28, r24
 2a8:	a0 91 27 03 	lds	r26, 0x0327
 2ac:	b0 91 28 03 	lds	r27, 0x0328
 2b0:	17 96       	adiw	r26, 0x07	; 7
 2b2:	9c 93       	st	X, r25
 2b4:	8e 93       	st	-X, r24
 2b6:	16 97       	sbiw	r26, 0x06	; 6
 2b8:	1d 96       	adiw	r26, 0x0d	; 13
 2ba:	8c 91       	ld	r24, X
 2bc:	1d 97       	sbiw	r26, 0x0d	; 13
 2be:	48 2f       	mov	r20, r24
 2c0:	50 e0       	ldi	r21, 0x00	; 0
 2c2:	1e 96       	adiw	r26, 0x0e	; 14
 2c4:	3c 91       	ld	r19, X
 2c6:	1e 97       	sbiw	r26, 0x0e	; 14
 2c8:	fa 01       	movw	r30, r20
 2ca:	ef 5d       	subi	r30, 0xDF	; 223
 2cc:	fc 4f       	sbci	r31, 0xFC	; 252
 2ce:	83 2f       	mov	r24, r19
 2d0:	80 95       	com	r24
 2d2:	90 81       	ld	r25, Z
 2d4:	89 23       	and	r24, r25
 2d6:	80 83       	st	Z, r24
 2d8:	88 23       	and	r24, r24
 2da:	a9 f4       	brne	.+42     	; 0x306 <OS_EventTaskWait+0x64>
 2dc:	1f 96       	adiw	r26, 0x0f	; 15
 2de:	2c 91       	ld	r18, X
 2e0:	92 2f       	mov	r25, r18
 2e2:	90 95       	com	r25
 2e4:	80 91 20 03 	lds	r24, 0x0320
 2e8:	89 23       	and	r24, r25
 2ea:	80 93 20 03 	sts	0x0320, r24
 2ee:	fe 01       	movw	r30, r28
 2f0:	e4 0f       	add	r30, r20
 2f2:	f5 1f       	adc	r31, r21
 2f4:	86 81       	ldd	r24, Z+6	; 0x06
 2f6:	83 2b       	or	r24, r19
 2f8:	86 83       	std	Z+6, r24	; 0x06
 2fa:	89 81       	ldd	r24, Y+1	; 0x01
 2fc:	82 2b       	or	r24, r18
 2fe:	89 83       	std	Y+1, r24	; 0x01
 300:	df 91       	pop	r29
 302:	cf 91       	pop	r28
 304:	08 95       	ret
 306:	1f 96       	adiw	r26, 0x0f	; 15
 308:	2c 91       	ld	r18, X
 30a:	f1 cf       	rjmp	.-30     	; 0x2ee <OS_EventTaskWait+0x4c>

0000030c <OS_EventTO>:
 30c:	cf 93       	push	r28
 30e:	df 93       	push	r29
 310:	ec 01       	movw	r28, r24
 312:	a0 91 27 03 	lds	r26, 0x0327
 316:	b0 91 28 03 	lds	r27, 0x0328
 31a:	1d 96       	adiw	r26, 0x0d	; 13
 31c:	8c 91       	ld	r24, X
 31e:	1d 97       	sbiw	r26, 0x0d	; 13
 320:	fe 01       	movw	r30, r28
 322:	e8 0f       	add	r30, r24
 324:	f1 1d       	adc	r31, r1
 326:	1e 96       	adiw	r26, 0x0e	; 14
 328:	8c 91       	ld	r24, X
 32a:	1e 97       	sbiw	r26, 0x0e	; 14
 32c:	80 95       	com	r24
 32e:	96 81       	ldd	r25, Z+6	; 0x06
 330:	89 23       	and	r24, r25
 332:	86 83       	std	Z+6, r24	; 0x06
 334:	88 23       	and	r24, r24
 336:	39 f4       	brne	.+14     	; 0x346 <OS_EventTO+0x3a>
 338:	1f 96       	adiw	r26, 0x0f	; 15
 33a:	9c 91       	ld	r25, X
 33c:	1f 97       	sbiw	r26, 0x0f	; 15
 33e:	90 95       	com	r25
 340:	89 81       	ldd	r24, Y+1	; 0x01
 342:	89 23       	and	r24, r25
 344:	89 83       	std	Y+1, r24	; 0x01
 346:	1a 96       	adiw	r26, 0x0a	; 10
 348:	1c 92       	st	X, r1
 34a:	1a 97       	sbiw	r26, 0x0a	; 10
 34c:	17 96       	adiw	r26, 0x07	; 7
 34e:	1c 92       	st	X, r1
 350:	1e 92       	st	-X, r1
 352:	16 97       	sbiw	r26, 0x06	; 6
 354:	df 91       	pop	r29
 356:	cf 91       	pop	r28
 358:	08 95       	ret

0000035a <OS_EventWaitListInit>:
 35a:	fc 01       	movw	r30, r24
 35c:	11 82       	std	Z+1, r1	; 0x01
 35e:	16 82       	std	Z+6, r1	; 0x06
 360:	17 82       	std	Z+7, r1	; 0x07
 362:	08 95       	ret

00000364 <OSSemCreate>:
 364:	9c 01       	movw	r18, r24
 366:	80 91 26 03 	lds	r24, 0x0326
 36a:	88 23       	and	r24, r24
 36c:	d9 f4       	brne	.+54     	; 0x3a4 <OSSemCreate+0x40>
 36e:	f8 94       	cli
 370:	e0 91 23 03 	lds	r30, 0x0323
 374:	f0 91 24 03 	lds	r31, 0x0324
 378:	30 97       	sbiw	r30, 0x00	; 0
 37a:	31 f0       	breq	.+12     	; 0x388 <OSSemCreate+0x24>
 37c:	84 81       	ldd	r24, Z+4	; 0x04
 37e:	95 81       	ldd	r25, Z+5	; 0x05
 380:	90 93 24 03 	sts	0x0324, r25
 384:	80 93 23 03 	sts	0x0323, r24
 388:	78 94       	sei
 38a:	30 97       	sbiw	r30, 0x00	; 0
 38c:	49 f0       	breq	.+18     	; 0x3a0 <OSSemCreate+0x3c>
 38e:	83 e0       	ldi	r24, 0x03	; 3
 390:	80 83       	st	Z, r24
 392:	33 83       	std	Z+3, r19	; 0x03
 394:	22 83       	std	Z+2, r18	; 0x02
 396:	15 82       	std	Z+5, r1	; 0x05
 398:	14 82       	std	Z+4, r1	; 0x04
 39a:	11 82       	std	Z+1, r1	; 0x01
 39c:	16 82       	std	Z+6, r1	; 0x06
 39e:	17 82       	std	Z+7, r1	; 0x07
 3a0:	cf 01       	movw	r24, r30
 3a2:	08 95       	ret
 3a4:	e0 e0       	ldi	r30, 0x00	; 0
 3a6:	f0 e0       	ldi	r31, 0x00	; 0
 3a8:	cf 01       	movw	r24, r30
 3aa:	08 95       	ret

000003ac <OS_TCBInit>:
 3ac:	1f 93       	push	r17
 3ae:	cf 93       	push	r28
 3b0:	df 93       	push	r29
 3b2:	18 2f       	mov	r17, r24
 3b4:	f8 94       	cli
 3b6:	c0 91 1a 03 	lds	r28, 0x031A
 3ba:	d0 91 1b 03 	lds	r29, 0x031B
 3be:	20 97       	sbiw	r28, 0x00	; 0
 3c0:	09 f4       	brne	.+2      	; 0x3c4 <OS_TCBInit+0x18>
 3c2:	54 c0       	rjmp	.+168    	; 0x46c <OS_TCBInit+0xc0>
 3c4:	8a 81       	ldd	r24, Y+2	; 0x02
 3c6:	9b 81       	ldd	r25, Y+3	; 0x03
 3c8:	90 93 1b 03 	sts	0x031B, r25
 3cc:	80 93 1a 03 	sts	0x031A, r24
 3d0:	78 94       	sei
 3d2:	79 83       	std	Y+1, r23	; 0x01
 3d4:	68 83       	st	Y, r22
 3d6:	1b 87       	std	Y+11, r17	; 0x0b
 3d8:	1a 86       	std	Y+10, r1	; 0x0a
 3da:	19 86       	std	Y+9, r1	; 0x09
 3dc:	18 86       	std	Y+8, r1	; 0x08
 3de:	e1 2f       	mov	r30, r17
 3e0:	e6 95       	lsr	r30
 3e2:	e6 95       	lsr	r30
 3e4:	e6 95       	lsr	r30
 3e6:	ed 87       	std	Y+13, r30	; 0x0d
 3e8:	f0 e0       	ldi	r31, 0x00	; 0
 3ea:	e0 50       	subi	r30, 0x00	; 0
 3ec:	ff 4f       	sbci	r31, 0xFF	; 255
 3ee:	80 81       	ld	r24, Z
 3f0:	8f 87       	std	Y+15, r24	; 0x0f
 3f2:	e1 2f       	mov	r30, r17
 3f4:	e7 70       	andi	r30, 0x07	; 7
 3f6:	ec 87       	std	Y+12, r30	; 0x0c
 3f8:	f0 e0       	ldi	r31, 0x00	; 0
 3fa:	e0 50       	subi	r30, 0x00	; 0
 3fc:	ff 4f       	sbci	r31, 0xFF	; 255
 3fe:	80 81       	ld	r24, Z
 400:	8e 87       	std	Y+14, r24	; 0x0e
 402:	1f 82       	std	Y+7, r1	; 0x07
 404:	1e 82       	std	Y+6, r1	; 0x06
 406:	ce 01       	movw	r24, r28
 408:	0e 94 dd 00 	call	0x1ba	; 0x1ba <OSTCBInitHook>
 40c:	ce 01       	movw	r24, r28
 40e:	0e 94 d5 00 	call	0x1aa	; 0x1aa <OSTaskCreateHook>
 412:	f8 94       	cli
 414:	e1 2f       	mov	r30, r17
 416:	f0 e0       	ldi	r31, 0x00	; 0
 418:	ee 0f       	add	r30, r30
 41a:	ff 1f       	adc	r31, r31
 41c:	ee 56       	subi	r30, 0x6E	; 110
 41e:	fb 4f       	sbci	r31, 0xFB	; 251
 420:	d1 83       	std	Z+1, r29	; 0x01
 422:	c0 83       	st	Z, r28
 424:	e0 91 90 02 	lds	r30, 0x0290
 428:	f0 91 91 02 	lds	r31, 0x0291
 42c:	fb 83       	std	Y+3, r31	; 0x03
 42e:	ea 83       	std	Y+2, r30	; 0x02
 430:	1d 82       	std	Y+5, r1	; 0x05
 432:	1c 82       	std	Y+4, r1	; 0x04
 434:	30 97       	sbiw	r30, 0x00	; 0
 436:	11 f0       	breq	.+4      	; 0x43c <OS_TCBInit+0x90>
 438:	d5 83       	std	Z+5, r29	; 0x05
 43a:	c4 83       	std	Z+4, r28	; 0x04
 43c:	d0 93 91 02 	sts	0x0291, r29
 440:	c0 93 90 02 	sts	0x0290, r28
 444:	80 91 20 03 	lds	r24, 0x0320
 448:	9f 85       	ldd	r25, Y+15	; 0x0f
 44a:	89 2b       	or	r24, r25
 44c:	80 93 20 03 	sts	0x0320, r24
 450:	ed 85       	ldd	r30, Y+13	; 0x0d
 452:	f0 e0       	ldi	r31, 0x00	; 0
 454:	ef 5d       	subi	r30, 0xDF	; 223
 456:	fc 4f       	sbci	r31, 0xFC	; 252
 458:	80 81       	ld	r24, Z
 45a:	9e 85       	ldd	r25, Y+14	; 0x0e
 45c:	89 2b       	or	r24, r25
 45e:	80 83       	st	Z, r24
 460:	78 94       	sei
 462:	80 e0       	ldi	r24, 0x00	; 0
 464:	df 91       	pop	r29
 466:	cf 91       	pop	r28
 468:	1f 91       	pop	r17
 46a:	08 95       	ret
 46c:	78 94       	sei
 46e:	86 e4       	ldi	r24, 0x46	; 70
 470:	df 91       	pop	r29
 472:	cf 91       	pop	r28
 474:	1f 91       	pop	r17
 476:	08 95       	ret

00000478 <OS_TaskIdle>:
 478:	f8 94       	cli
 47a:	80 91 8a 02 	lds	r24, 0x028A
 47e:	90 91 8b 02 	lds	r25, 0x028B
 482:	a0 91 8c 02 	lds	r26, 0x028C
 486:	b0 91 8d 02 	lds	r27, 0x028D
 48a:	01 96       	adiw	r24, 0x01	; 1
 48c:	a1 1d       	adc	r26, r1
 48e:	b1 1d       	adc	r27, r1
 490:	80 93 8a 02 	sts	0x028A, r24
 494:	90 93 8b 02 	sts	0x028B, r25
 498:	a0 93 8c 02 	sts	0x028C, r26
 49c:	b0 93 8d 02 	sts	0x028D, r27
 4a0:	78 94       	sei
 4a2:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <OSTaskIdleHook>
 4a6:	e8 cf       	rjmp	.-48     	; 0x478 <OS_TaskIdle>

000004a8 <OS_Sched>:
 4a8:	f8 94       	cli
 4aa:	80 91 26 03 	lds	r24, 0x0326
 4ae:	88 23       	and	r24, r24
 4b0:	09 f0       	breq	.+2      	; 0x4b4 <OS_Sched+0xc>
 4b2:	3f c0       	rjmp	.+126    	; 0x532 <OS_Sched+0x8a>
 4b4:	80 91 88 02 	lds	r24, 0x0288
 4b8:	88 23       	and	r24, r24
 4ba:	d9 f5       	brne	.+118    	; 0x532 <OS_Sched+0x8a>
 4bc:	e0 91 20 03 	lds	r30, 0x0320
 4c0:	f0 e0       	ldi	r31, 0x00	; 0
 4c2:	e8 5f       	subi	r30, 0xF8	; 248
 4c4:	fe 4f       	sbci	r31, 0xFE	; 254
 4c6:	80 81       	ld	r24, Z
 4c8:	e8 2f       	mov	r30, r24
 4ca:	f0 e0       	ldi	r31, 0x00	; 0
 4cc:	ef 5d       	subi	r30, 0xDF	; 223
 4ce:	fc 4f       	sbci	r31, 0xFC	; 252
 4d0:	e0 81       	ld	r30, Z
 4d2:	f0 e0       	ldi	r31, 0x00	; 0
 4d4:	e8 5f       	subi	r30, 0xF8	; 248
 4d6:	fe 4f       	sbci	r31, 0xFE	; 254
 4d8:	98 2f       	mov	r25, r24
 4da:	99 0f       	add	r25, r25
 4dc:	99 0f       	add	r25, r25
 4de:	99 0f       	add	r25, r25
 4e0:	80 81       	ld	r24, Z
 4e2:	98 0f       	add	r25, r24
 4e4:	90 93 8e 02 	sts	0x028E, r25
 4e8:	80 91 8f 02 	lds	r24, 0x028F
 4ec:	98 17       	cp	r25, r24
 4ee:	09 f1       	breq	.+66     	; 0x532 <OS_Sched+0x8a>
 4f0:	e9 2f       	mov	r30, r25
 4f2:	f0 e0       	ldi	r31, 0x00	; 0
 4f4:	ee 0f       	add	r30, r30
 4f6:	ff 1f       	adc	r31, r31
 4f8:	ee 56       	subi	r30, 0x6E	; 110
 4fa:	fb 4f       	sbci	r31, 0xFB	; 251
 4fc:	80 81       	ld	r24, Z
 4fe:	91 81       	ldd	r25, Z+1	; 0x01
 500:	90 93 1f 03 	sts	0x031F, r25
 504:	80 93 1e 03 	sts	0x031E, r24
 508:	80 91 12 03 	lds	r24, 0x0312
 50c:	90 91 13 03 	lds	r25, 0x0313
 510:	a0 91 14 03 	lds	r26, 0x0314
 514:	b0 91 15 03 	lds	r27, 0x0315
 518:	01 96       	adiw	r24, 0x01	; 1
 51a:	a1 1d       	adc	r26, r1
 51c:	b1 1d       	adc	r27, r1
 51e:	80 93 12 03 	sts	0x0312, r24
 522:	90 93 13 03 	sts	0x0313, r25
 526:	a0 93 14 03 	sts	0x0314, r26
 52a:	b0 93 15 03 	sts	0x0315, r27
 52e:	0e 94 44 06 	call	0xc88	; 0xc88 <OSCtxSw>
 532:	78 94       	sei
 534:	08 95       	ret

00000536 <OSTimeDly>:
 536:	9c 01       	movw	r18, r24
 538:	00 97       	sbiw	r24, 0x00	; 0
 53a:	21 f1       	breq	.+72     	; 0x584 <OSTimeDly+0x4e>
 53c:	f8 94       	cli
 53e:	a0 91 27 03 	lds	r26, 0x0327
 542:	b0 91 28 03 	lds	r27, 0x0328
 546:	1d 96       	adiw	r26, 0x0d	; 13
 548:	ec 91       	ld	r30, X
 54a:	1d 97       	sbiw	r26, 0x0d	; 13
 54c:	f0 e0       	ldi	r31, 0x00	; 0
 54e:	ef 5d       	subi	r30, 0xDF	; 223
 550:	fc 4f       	sbci	r31, 0xFC	; 252
 552:	1e 96       	adiw	r26, 0x0e	; 14
 554:	8c 91       	ld	r24, X
 556:	1e 97       	sbiw	r26, 0x0e	; 14
 558:	80 95       	com	r24
 55a:	90 81       	ld	r25, Z
 55c:	89 23       	and	r24, r25
 55e:	80 83       	st	Z, r24
 560:	88 23       	and	r24, r24
 562:	49 f4       	brne	.+18     	; 0x576 <OSTimeDly+0x40>
 564:	1f 96       	adiw	r26, 0x0f	; 15
 566:	9c 91       	ld	r25, X
 568:	1f 97       	sbiw	r26, 0x0f	; 15
 56a:	90 95       	com	r25
 56c:	80 91 20 03 	lds	r24, 0x0320
 570:	89 23       	and	r24, r25
 572:	80 93 20 03 	sts	0x0320, r24
 576:	19 96       	adiw	r26, 0x09	; 9
 578:	3c 93       	st	X, r19
 57a:	2e 93       	st	-X, r18
 57c:	18 97       	sbiw	r26, 0x08	; 8
 57e:	78 94       	sei
 580:	0e 94 54 02 	call	0x4a8	; 0x4a8 <OS_Sched>
 584:	08 95       	ret

00000586 <OSTimeDlyHMSM>:
 586:	8f 92       	push	r8
 588:	9f 92       	push	r9
 58a:	af 92       	push	r10
 58c:	bf 92       	push	r11
 58e:	cf 92       	push	r12
 590:	df 92       	push	r13
 592:	ef 92       	push	r14
 594:	ff 92       	push	r15
 596:	0f 93       	push	r16
 598:	1f 93       	push	r17
 59a:	cf 93       	push	r28
 59c:	df 93       	push	r29
 59e:	88 2e       	mov	r8, r24
 5a0:	16 2f       	mov	r17, r22
 5a2:	94 2e       	mov	r9, r20
 5a4:	88 23       	and	r24, r24
 5a6:	c9 f0       	breq	.+50     	; 0x5da <OSTimeDlyHMSM+0x54>
 5a8:	1c 33       	cpi	r17, 0x3C	; 60
 5aa:	00 f5       	brcc	.+64     	; 0x5ec <OSTimeDlyHMSM+0x66>
 5ac:	8b e3       	ldi	r24, 0x3B	; 59
 5ae:	89 15       	cp	r24, r9
 5b0:	90 f0       	brcs	.+36     	; 0x5d6 <OSTimeDlyHMSM+0x50>
 5b2:	93 e0       	ldi	r25, 0x03	; 3
 5b4:	28 3e       	cpi	r18, 0xE8	; 232
 5b6:	39 07       	cpc	r19, r25
 5b8:	d8 f0       	brcs	.+54     	; 0x5f0 <OSTimeDlyHMSM+0x6a>
 5ba:	83 e5       	ldi	r24, 0x53	; 83
 5bc:	df 91       	pop	r29
 5be:	cf 91       	pop	r28
 5c0:	1f 91       	pop	r17
 5c2:	0f 91       	pop	r16
 5c4:	ff 90       	pop	r15
 5c6:	ef 90       	pop	r14
 5c8:	df 90       	pop	r13
 5ca:	cf 90       	pop	r12
 5cc:	bf 90       	pop	r11
 5ce:	af 90       	pop	r10
 5d0:	9f 90       	pop	r9
 5d2:	8f 90       	pop	r8
 5d4:	08 95       	ret
 5d6:	82 e5       	ldi	r24, 0x52	; 82
 5d8:	f1 cf       	rjmp	.-30     	; 0x5bc <OSTimeDlyHMSM+0x36>
 5da:	66 23       	and	r22, r22
 5dc:	29 f7       	brne	.-54     	; 0x5a8 <OSTimeDlyHMSM+0x22>
 5de:	44 23       	and	r20, r20
 5e0:	29 f7       	brne	.-54     	; 0x5ac <OSTimeDlyHMSM+0x26>
 5e2:	21 15       	cp	r18, r1
 5e4:	31 05       	cpc	r19, r1
 5e6:	29 f7       	brne	.-54     	; 0x5b2 <OSTimeDlyHMSM+0x2c>
 5e8:	84 e5       	ldi	r24, 0x54	; 84
 5ea:	e8 cf       	rjmp	.-48     	; 0x5bc <OSTimeDlyHMSM+0x36>
 5ec:	81 e5       	ldi	r24, 0x51	; 81
 5ee:	e6 cf       	rjmp	.-52     	; 0x5bc <OSTimeDlyHMSM+0x36>
 5f0:	b9 01       	movw	r22, r18
 5f2:	80 e0       	ldi	r24, 0x00	; 0
 5f4:	90 e0       	ldi	r25, 0x00	; 0
 5f6:	24 e6       	ldi	r18, 0x64	; 100
 5f8:	30 e0       	ldi	r19, 0x00	; 0
 5fa:	40 e0       	ldi	r20, 0x00	; 0
 5fc:	50 e0       	ldi	r21, 0x00	; 0
 5fe:	0e 94 3f 07 	call	0xe7e	; 0xe7e <__mulsi3>
 602:	6c 50       	subi	r22, 0x0C	; 12
 604:	7e 4f       	sbci	r23, 0xFE	; 254
 606:	8f 4f       	sbci	r24, 0xFF	; 255
 608:	9f 4f       	sbci	r25, 0xFF	; 255
 60a:	28 ee       	ldi	r18, 0xE8	; 232
 60c:	33 e0       	ldi	r19, 0x03	; 3
 60e:	40 e0       	ldi	r20, 0x00	; 0
 610:	50 e0       	ldi	r21, 0x00	; 0
 612:	0e 94 5e 07 	call	0xebc	; 0xebc <__udivmodsi4>
 616:	59 01       	movw	r10, r18
 618:	6a 01       	movw	r12, r20
 61a:	61 2f       	mov	r22, r17
 61c:	70 e0       	ldi	r23, 0x00	; 0
 61e:	80 e0       	ldi	r24, 0x00	; 0
 620:	90 e0       	ldi	r25, 0x00	; 0
 622:	2c e3       	ldi	r18, 0x3C	; 60
 624:	30 e0       	ldi	r19, 0x00	; 0
 626:	40 e0       	ldi	r20, 0x00	; 0
 628:	50 e0       	ldi	r21, 0x00	; 0
 62a:	0e 94 3f 07 	call	0xe7e	; 0xe7e <__mulsi3>
 62e:	7b 01       	movw	r14, r22
 630:	8c 01       	movw	r16, r24
 632:	e9 0c       	add	r14, r9
 634:	f1 1c       	adc	r15, r1
 636:	01 1d       	adc	r16, r1
 638:	11 1d       	adc	r17, r1
 63a:	68 2d       	mov	r22, r8
 63c:	70 e0       	ldi	r23, 0x00	; 0
 63e:	80 e0       	ldi	r24, 0x00	; 0
 640:	90 e0       	ldi	r25, 0x00	; 0
 642:	20 e1       	ldi	r18, 0x10	; 16
 644:	3e e0       	ldi	r19, 0x0E	; 14
 646:	40 e0       	ldi	r20, 0x00	; 0
 648:	50 e0       	ldi	r21, 0x00	; 0
 64a:	0e 94 3f 07 	call	0xe7e	; 0xe7e <__mulsi3>
 64e:	e6 0e       	add	r14, r22
 650:	f7 1e       	adc	r15, r23
 652:	08 1f       	adc	r16, r24
 654:	19 1f       	adc	r17, r25
 656:	c8 01       	movw	r24, r16
 658:	b7 01       	movw	r22, r14
 65a:	24 e6       	ldi	r18, 0x64	; 100
 65c:	30 e0       	ldi	r19, 0x00	; 0
 65e:	40 e0       	ldi	r20, 0x00	; 0
 660:	50 e0       	ldi	r21, 0x00	; 0
 662:	0e 94 3f 07 	call	0xe7e	; 0xe7e <__mulsi3>
 666:	a6 0e       	add	r10, r22
 668:	b7 1e       	adc	r11, r23
 66a:	c8 1e       	adc	r12, r24
 66c:	d9 1e       	adc	r13, r25
 66e:	76 01       	movw	r14, r12
 670:	00 27       	eor	r16, r16
 672:	11 27       	eor	r17, r17
 674:	e7 01       	movw	r28, r14
 676:	8f ef       	ldi	r24, 0xFF	; 255
 678:	9f ef       	ldi	r25, 0xFF	; 255
 67a:	a0 e0       	ldi	r26, 0x00	; 0
 67c:	b0 e0       	ldi	r27, 0x00	; 0
 67e:	a8 22       	and	r10, r24
 680:	b9 22       	and	r11, r25
 682:	ca 22       	and	r12, r26
 684:	db 22       	and	r13, r27
 686:	c5 01       	movw	r24, r10
 688:	0e 94 9b 02 	call	0x536	; 0x536 <OSTimeDly>
 68c:	ef 28       	or	r14, r15
 68e:	51 f0       	breq	.+20     	; 0x6a4 <OSTimeDlyHMSM+0x11e>
 690:	80 e0       	ldi	r24, 0x00	; 0
 692:	90 e8       	ldi	r25, 0x80	; 128
 694:	0e 94 9b 02 	call	0x536	; 0x536 <OSTimeDly>
 698:	80 e0       	ldi	r24, 0x00	; 0
 69a:	90 e8       	ldi	r25, 0x80	; 128
 69c:	0e 94 9b 02 	call	0x536	; 0x536 <OSTimeDly>
 6a0:	21 97       	sbiw	r28, 0x01	; 1
 6a2:	b1 f7       	brne	.-20     	; 0x690 <OSTimeDlyHMSM+0x10a>
 6a4:	80 e0       	ldi	r24, 0x00	; 0
 6a6:	8a cf       	rjmp	.-236    	; 0x5bc <OSTimeDlyHMSM+0x36>

000006a8 <OS_TaskStat>:
 6a8:	df 92       	push	r13
 6aa:	ef 92       	push	r14
 6ac:	ff 92       	push	r15
 6ae:	0f 93       	push	r16
 6b0:	1f 93       	push	r17
 6b2:	80 91 91 04 	lds	r24, 0x0491
 6b6:	88 23       	and	r24, r24
 6b8:	41 f4       	brne	.+16     	; 0x6ca <OS_TaskStat+0x22>
 6ba:	88 ec       	ldi	r24, 0xC8	; 200
 6bc:	90 e0       	ldi	r25, 0x00	; 0
 6be:	0e 94 9b 02 	call	0x536	; 0x536 <OSTimeDly>
 6c2:	80 91 91 04 	lds	r24, 0x0491
 6c6:	88 23       	and	r24, r24
 6c8:	c1 f3       	breq	.-16     	; 0x6ba <OS_TaskStat+0x12>
 6ca:	60 91 16 03 	lds	r22, 0x0316
 6ce:	70 91 17 03 	lds	r23, 0x0317
 6d2:	80 91 18 03 	lds	r24, 0x0318
 6d6:	90 91 19 03 	lds	r25, 0x0319
 6da:	24 e6       	ldi	r18, 0x64	; 100
 6dc:	30 e0       	ldi	r19, 0x00	; 0
 6de:	40 e0       	ldi	r20, 0x00	; 0
 6e0:	50 e0       	ldi	r21, 0x00	; 0
 6e2:	0e 94 5e 07 	call	0xebc	; 0xebc <__udivmodsi4>
 6e6:	c9 01       	movw	r24, r18
 6e8:	da 01       	movw	r26, r20
 6ea:	7c 01       	movw	r14, r24
 6ec:	8d 01       	movw	r16, r26
 6ee:	44 e6       	ldi	r20, 0x64	; 100
 6f0:	d4 2e       	mov	r13, r20
 6f2:	10 c0       	rjmp	.+32     	; 0x714 <OS_TaskStat+0x6c>
 6f4:	a8 01       	movw	r20, r16
 6f6:	97 01       	movw	r18, r14
 6f8:	0e 94 5e 07 	call	0xebc	; 0xebc <__udivmodsi4>
 6fc:	8d 2d       	mov	r24, r13
 6fe:	82 1b       	sub	r24, r18
 700:	87 fd       	sbrc	r24, 7
 702:	44 c0       	rjmp	.+136    	; 0x78c <OS_TaskStat+0xe4>
 704:	80 93 1c 03 	sts	0x031C, r24
 708:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <OSTaskStatHook>
 70c:	84 e6       	ldi	r24, 0x64	; 100
 70e:	90 e0       	ldi	r25, 0x00	; 0
 710:	0e 94 9b 02 	call	0x536	; 0x536 <OSTimeDly>
 714:	f8 94       	cli
 716:	80 91 8a 02 	lds	r24, 0x028A
 71a:	90 91 8b 02 	lds	r25, 0x028B
 71e:	a0 91 8c 02 	lds	r26, 0x028C
 722:	b0 91 8d 02 	lds	r27, 0x028D
 726:	80 93 ac 04 	sts	0x04AC, r24
 72a:	90 93 ad 04 	sts	0x04AD, r25
 72e:	a0 93 ae 04 	sts	0x04AE, r26
 732:	b0 93 af 04 	sts	0x04AF, r27
 736:	60 91 8a 02 	lds	r22, 0x028A
 73a:	70 91 8b 02 	lds	r23, 0x028B
 73e:	80 91 8c 02 	lds	r24, 0x028C
 742:	90 91 8d 02 	lds	r25, 0x028D
 746:	10 92 8a 02 	sts	0x028A, r1
 74a:	10 92 8b 02 	sts	0x028B, r1
 74e:	10 92 8c 02 	sts	0x028C, r1
 752:	10 92 8d 02 	sts	0x028D, r1
 756:	78 94       	sei
 758:	e1 14       	cp	r14, r1
 75a:	f1 04       	cpc	r15, r1
 75c:	01 05       	cpc	r16, r1
 75e:	11 05       	cpc	r17, r1
 760:	49 f6       	brne	.-110    	; 0x6f4 <OS_TaskStat+0x4c>
 762:	10 92 1c 03 	sts	0x031C, r1
 766:	60 91 16 03 	lds	r22, 0x0316
 76a:	70 91 17 03 	lds	r23, 0x0317
 76e:	80 91 18 03 	lds	r24, 0x0318
 772:	90 91 19 03 	lds	r25, 0x0319
 776:	24 e6       	ldi	r18, 0x64	; 100
 778:	30 e0       	ldi	r19, 0x00	; 0
 77a:	40 e0       	ldi	r20, 0x00	; 0
 77c:	50 e0       	ldi	r21, 0x00	; 0
 77e:	0e 94 5e 07 	call	0xebc	; 0xebc <__udivmodsi4>
 782:	c9 01       	movw	r24, r18
 784:	da 01       	movw	r26, r20
 786:	7c 01       	movw	r14, r24
 788:	8d 01       	movw	r16, r26
 78a:	be cf       	rjmp	.-132    	; 0x708 <OS_TaskStat+0x60>
 78c:	10 92 1c 03 	sts	0x031C, r1
 790:	bb cf       	rjmp	.-138    	; 0x708 <OS_TaskStat+0x60>

00000792 <OSStatInit>:
 792:	82 e0       	ldi	r24, 0x02	; 2
 794:	90 e0       	ldi	r25, 0x00	; 0
 796:	0e 94 9b 02 	call	0x536	; 0x536 <OSTimeDly>
 79a:	f8 94       	cli
 79c:	10 92 8a 02 	sts	0x028A, r1
 7a0:	10 92 8b 02 	sts	0x028B, r1
 7a4:	10 92 8c 02 	sts	0x028C, r1
 7a8:	10 92 8d 02 	sts	0x028D, r1
 7ac:	78 94       	sei
 7ae:	84 e6       	ldi	r24, 0x64	; 100
 7b0:	90 e0       	ldi	r25, 0x00	; 0
 7b2:	0e 94 9b 02 	call	0x536	; 0x536 <OSTimeDly>
 7b6:	f8 94       	cli
 7b8:	80 91 8a 02 	lds	r24, 0x028A
 7bc:	90 91 8b 02 	lds	r25, 0x028B
 7c0:	a0 91 8c 02 	lds	r26, 0x028C
 7c4:	b0 91 8d 02 	lds	r27, 0x028D
 7c8:	80 93 16 03 	sts	0x0316, r24
 7cc:	90 93 17 03 	sts	0x0317, r25
 7d0:	a0 93 18 03 	sts	0x0318, r26
 7d4:	b0 93 19 03 	sts	0x0319, r27
 7d8:	81 e0       	ldi	r24, 0x01	; 1
 7da:	80 93 91 04 	sts	0x0491, r24
 7de:	78 94       	sei
 7e0:	08 95       	ret

000007e2 <OSTaskCreate>:
 7e2:	af 92       	push	r10
 7e4:	bf 92       	push	r11
 7e6:	cf 92       	push	r12
 7e8:	df 92       	push	r13
 7ea:	ef 92       	push	r14
 7ec:	ff 92       	push	r15
 7ee:	0f 93       	push	r16
 7f0:	1f 93       	push	r17
 7f2:	cf 93       	push	r28
 7f4:	df 93       	push	r29
 7f6:	fc 01       	movw	r30, r24
 7f8:	12 2f       	mov	r17, r18
 7fa:	f8 94       	cli
 7fc:	c2 2f       	mov	r28, r18
 7fe:	d0 e0       	ldi	r29, 0x00	; 0
 800:	cc 0f       	add	r28, r28
 802:	dd 1f       	adc	r29, r29
 804:	ce 56       	subi	r28, 0x6E	; 110
 806:	db 4f       	sbci	r29, 0xFB	; 251
 808:	88 81       	ld	r24, Y
 80a:	99 81       	ldd	r25, Y+1	; 0x01
 80c:	89 2b       	or	r24, r25
 80e:	71 f0       	breq	.+28     	; 0x82c <OSTaskCreate+0x4a>
 810:	78 94       	sei
 812:	18 e2       	ldi	r17, 0x28	; 40
 814:	81 2f       	mov	r24, r17
 816:	df 91       	pop	r29
 818:	cf 91       	pop	r28
 81a:	1f 91       	pop	r17
 81c:	0f 91       	pop	r16
 81e:	ff 90       	pop	r15
 820:	ef 90       	pop	r14
 822:	df 90       	pop	r13
 824:	cf 90       	pop	r12
 826:	bf 90       	pop	r11
 828:	af 90       	pop	r10
 82a:	08 95       	ret
 82c:	81 e0       	ldi	r24, 0x01	; 1
 82e:	90 e0       	ldi	r25, 0x00	; 0
 830:	99 83       	std	Y+1, r25	; 0x01
 832:	88 83       	st	Y, r24
 834:	78 94       	sei
 836:	cf 01       	movw	r24, r30
 838:	20 e0       	ldi	r18, 0x00	; 0
 83a:	30 e0       	ldi	r19, 0x00	; 0
 83c:	0e 94 ac 00 	call	0x158	; 0x158 <OSTaskStkInit>
 840:	bc 01       	movw	r22, r24
 842:	81 2f       	mov	r24, r17
 844:	40 e0       	ldi	r20, 0x00	; 0
 846:	50 e0       	ldi	r21, 0x00	; 0
 848:	20 e0       	ldi	r18, 0x00	; 0
 84a:	30 e0       	ldi	r19, 0x00	; 0
 84c:	ee 24       	eor	r14, r14
 84e:	ff 24       	eor	r15, r15
 850:	87 01       	movw	r16, r14
 852:	cc 24       	eor	r12, r12
 854:	dd 24       	eor	r13, r13
 856:	aa 24       	eor	r10, r10
 858:	bb 24       	eor	r11, r11
 85a:	0e 94 d6 01 	call	0x3ac	; 0x3ac <OS_TCBInit>
 85e:	18 2f       	mov	r17, r24
 860:	88 23       	and	r24, r24
 862:	71 f4       	brne	.+28     	; 0x880 <OSTaskCreate+0x9e>
 864:	f8 94       	cli
 866:	80 91 1d 03 	lds	r24, 0x031D
 86a:	8f 5f       	subi	r24, 0xFF	; 255
 86c:	80 93 1d 03 	sts	0x031D, r24
 870:	78 94       	sei
 872:	80 91 89 02 	lds	r24, 0x0289
 876:	81 30       	cpi	r24, 0x01	; 1
 878:	69 f6       	brne	.-102    	; 0x814 <OSTaskCreate+0x32>
 87a:	0e 94 54 02 	call	0x4a8	; 0x4a8 <OS_Sched>
 87e:	ca cf       	rjmp	.-108    	; 0x814 <OSTaskCreate+0x32>
 880:	f8 94       	cli
 882:	19 82       	std	Y+1, r1	; 0x01
 884:	18 82       	st	Y, r1
 886:	78 94       	sei
 888:	c5 cf       	rjmp	.-118    	; 0x814 <OSTaskCreate+0x32>

0000088a <OSSemPost>:
 88a:	fc 01       	movw	r30, r24
 88c:	f8 94       	cli
 88e:	81 81       	ldd	r24, Z+1	; 0x01
 890:	88 23       	and	r24, r24
 892:	79 f4       	brne	.+30     	; 0x8b2 <OSSemPost+0x28>
 894:	82 81       	ldd	r24, Z+2	; 0x02
 896:	93 81       	ldd	r25, Z+3	; 0x03
 898:	2f ef       	ldi	r18, 0xFF	; 255
 89a:	8f 3f       	cpi	r24, 0xFF	; 255
 89c:	92 07       	cpc	r25, r18
 89e:	31 f0       	breq	.+12     	; 0x8ac <OSSemPost+0x22>
 8a0:	01 96       	adiw	r24, 0x01	; 1
 8a2:	93 83       	std	Z+3, r25	; 0x03
 8a4:	82 83       	std	Z+2, r24	; 0x02
 8a6:	78 94       	sei
 8a8:	80 e0       	ldi	r24, 0x00	; 0
 8aa:	08 95       	ret
 8ac:	78 94       	sei
 8ae:	82 e3       	ldi	r24, 0x32	; 50
 8b0:	08 95       	ret
 8b2:	cf 01       	movw	r24, r30
 8b4:	60 e0       	ldi	r22, 0x00	; 0
 8b6:	70 e0       	ldi	r23, 0x00	; 0
 8b8:	41 e0       	ldi	r20, 0x01	; 1
 8ba:	0e 94 fd 00 	call	0x1fa	; 0x1fa <OS_EventTaskRdy>
 8be:	78 94       	sei
 8c0:	0e 94 54 02 	call	0x4a8	; 0x4a8 <OS_Sched>
 8c4:	80 e0       	ldi	r24, 0x00	; 0
 8c6:	08 95       	ret

000008c8 <OSSemPend>:
 8c8:	0f 93       	push	r16
 8ca:	1f 93       	push	r17
 8cc:	cf 93       	push	r28
 8ce:	df 93       	push	r29
 8d0:	ec 01       	movw	r28, r24
 8d2:	8a 01       	movw	r16, r20
 8d4:	80 91 26 03 	lds	r24, 0x0326
 8d8:	88 23       	and	r24, r24
 8da:	81 f4       	brne	.+32     	; 0x8fc <OSSemPend+0x34>
 8dc:	f8 94       	cli
 8de:	8a 81       	ldd	r24, Y+2	; 0x02
 8e0:	9b 81       	ldd	r25, Y+3	; 0x03
 8e2:	00 97       	sbiw	r24, 0x00	; 0
 8e4:	99 f0       	breq	.+38     	; 0x90c <OSSemPend+0x44>
 8e6:	01 97       	sbiw	r24, 0x01	; 1
 8e8:	9b 83       	std	Y+3, r25	; 0x03
 8ea:	8a 83       	std	Y+2, r24	; 0x02
 8ec:	78 94       	sei
 8ee:	fa 01       	movw	r30, r20
 8f0:	10 82       	st	Z, r1
 8f2:	df 91       	pop	r29
 8f4:	cf 91       	pop	r28
 8f6:	1f 91       	pop	r17
 8f8:	0f 91       	pop	r16
 8fa:	08 95       	ret
 8fc:	82 e0       	ldi	r24, 0x02	; 2
 8fe:	fa 01       	movw	r30, r20
 900:	80 83       	st	Z, r24
 902:	df 91       	pop	r29
 904:	cf 91       	pop	r28
 906:	1f 91       	pop	r17
 908:	0f 91       	pop	r16
 90a:	08 95       	ret
 90c:	e0 91 27 03 	lds	r30, 0x0327
 910:	f0 91 28 03 	lds	r31, 0x0328
 914:	82 85       	ldd	r24, Z+10	; 0x0a
 916:	81 60       	ori	r24, 0x01	; 1
 918:	82 87       	std	Z+10, r24	; 0x0a
 91a:	71 87       	std	Z+9, r23	; 0x09
 91c:	60 87       	std	Z+8, r22	; 0x08
 91e:	ce 01       	movw	r24, r28
 920:	0e 94 51 01 	call	0x2a2	; 0x2a2 <OS_EventTaskWait>
 924:	78 94       	sei
 926:	0e 94 54 02 	call	0x4a8	; 0x4a8 <OS_Sched>
 92a:	f8 94       	cli
 92c:	e0 91 27 03 	lds	r30, 0x0327
 930:	f0 91 28 03 	lds	r31, 0x0328
 934:	82 85       	ldd	r24, Z+10	; 0x0a
 936:	80 fd       	sbrc	r24, 0
 938:	0a c0       	rjmp	.+20     	; 0x94e <OSSemPend+0x86>
 93a:	17 82       	std	Z+7, r1	; 0x07
 93c:	16 82       	std	Z+6, r1	; 0x06
 93e:	78 94       	sei
 940:	f8 01       	movw	r30, r16
 942:	10 82       	st	Z, r1
 944:	df 91       	pop	r29
 946:	cf 91       	pop	r28
 948:	1f 91       	pop	r17
 94a:	0f 91       	pop	r16
 94c:	08 95       	ret
 94e:	ce 01       	movw	r24, r28
 950:	0e 94 86 01 	call	0x30c	; 0x30c <OS_EventTO>
 954:	78 94       	sei
 956:	8a e0       	ldi	r24, 0x0A	; 10
 958:	f8 01       	movw	r30, r16
 95a:	80 83       	st	Z, r24
 95c:	ca cf       	rjmp	.-108    	; 0x8f2 <OSSemPend+0x2a>

0000095e <OSSchedUnlock>:
 95e:	80 91 89 02 	lds	r24, 0x0289
 962:	81 30       	cpi	r24, 0x01	; 1
 964:	09 f0       	breq	.+2      	; 0x968 <OSSchedUnlock+0xa>
 966:	08 95       	ret
 968:	f8 94       	cli
 96a:	80 91 88 02 	lds	r24, 0x0288
 96e:	88 23       	and	r24, r24
 970:	59 f0       	breq	.+22     	; 0x988 <OSSchedUnlock+0x2a>
 972:	81 50       	subi	r24, 0x01	; 1
 974:	80 93 88 02 	sts	0x0288, r24
 978:	88 23       	and	r24, r24
 97a:	21 f4       	brne	.+8      	; 0x984 <OSSchedUnlock+0x26>
 97c:	80 91 26 03 	lds	r24, 0x0326
 980:	88 23       	and	r24, r24
 982:	21 f0       	breq	.+8      	; 0x98c <OSSchedUnlock+0x2e>
 984:	78 94       	sei
 986:	08 95       	ret
 988:	78 94       	sei
 98a:	08 95       	ret
 98c:	78 94       	sei
 98e:	0e 94 54 02 	call	0x4a8	; 0x4a8 <OS_Sched>
 992:	08 95       	ret

00000994 <OSTimeTick>:
 994:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <OSTimeTickHook>
 998:	80 91 89 02 	lds	r24, 0x0289
 99c:	81 30       	cpi	r24, 0x01	; 1
 99e:	09 f0       	breq	.+2      	; 0x9a2 <OSTimeTick+0xe>
 9a0:	08 95       	ret
 9a2:	a0 91 90 02 	lds	r26, 0x0290
 9a6:	b0 91 91 02 	lds	r27, 0x0291
 9aa:	1b 96       	adiw	r26, 0x0b	; 11
 9ac:	8c 91       	ld	r24, X
 9ae:	1b 97       	sbiw	r26, 0x0b	; 11
 9b0:	8c 30       	cpi	r24, 0x0C	; 12
 9b2:	b1 f3       	breq	.-20     	; 0x9a0 <OSTimeTick+0xc>
 9b4:	20 91 20 03 	lds	r18, 0x0320
 9b8:	41 e0       	ldi	r20, 0x01	; 1
 9ba:	50 e0       	ldi	r21, 0x00	; 0
 9bc:	1a c0       	rjmp	.+52     	; 0x9f2 <OSTimeTick+0x5e>
 9be:	1f 96       	adiw	r26, 0x0f	; 15
 9c0:	8c 91       	ld	r24, X
 9c2:	1f 97       	sbiw	r26, 0x0f	; 15
 9c4:	28 2b       	or	r18, r24
 9c6:	1d 96       	adiw	r26, 0x0d	; 13
 9c8:	ec 91       	ld	r30, X
 9ca:	1d 97       	sbiw	r26, 0x0d	; 13
 9cc:	f0 e0       	ldi	r31, 0x00	; 0
 9ce:	ef 5d       	subi	r30, 0xDF	; 223
 9d0:	fc 4f       	sbci	r31, 0xFC	; 252
 9d2:	80 81       	ld	r24, Z
 9d4:	1e 96       	adiw	r26, 0x0e	; 14
 9d6:	9c 91       	ld	r25, X
 9d8:	1e 97       	sbiw	r26, 0x0e	; 14
 9da:	89 2b       	or	r24, r25
 9dc:	80 83       	st	Z, r24
 9de:	12 96       	adiw	r26, 0x02	; 2
 9e0:	0d 90       	ld	r0, X+
 9e2:	bc 91       	ld	r27, X
 9e4:	a0 2d       	mov	r26, r0
 9e6:	78 94       	sei
 9e8:	1b 96       	adiw	r26, 0x0b	; 11
 9ea:	8c 91       	ld	r24, X
 9ec:	1b 97       	sbiw	r26, 0x0b	; 11
 9ee:	8c 30       	cpi	r24, 0x0C	; 12
 9f0:	c1 f0       	breq	.+48     	; 0xa22 <OSTimeTick+0x8e>
 9f2:	f8 94       	cli
 9f4:	18 96       	adiw	r26, 0x08	; 8
 9f6:	8d 91       	ld	r24, X+
 9f8:	9c 91       	ld	r25, X
 9fa:	19 97       	sbiw	r26, 0x09	; 9
 9fc:	00 97       	sbiw	r24, 0x00	; 0
 9fe:	79 f3       	breq	.-34     	; 0x9de <OSTimeTick+0x4a>
 a00:	01 97       	sbiw	r24, 0x01	; 1
 a02:	19 96       	adiw	r26, 0x09	; 9
 a04:	9c 93       	st	X, r25
 a06:	8e 93       	st	-X, r24
 a08:	18 97       	sbiw	r26, 0x08	; 8
 a0a:	89 2b       	or	r24, r25
 a0c:	41 f7       	brne	.-48     	; 0x9de <OSTimeTick+0x4a>
 a0e:	1a 96       	adiw	r26, 0x0a	; 10
 a10:	8c 91       	ld	r24, X
 a12:	1a 97       	sbiw	r26, 0x0a	; 10
 a14:	83 ff       	sbrs	r24, 3
 a16:	d3 cf       	rjmp	.-90     	; 0x9be <OSTimeTick+0x2a>
 a18:	19 96       	adiw	r26, 0x09	; 9
 a1a:	5c 93       	st	X, r21
 a1c:	4e 93       	st	-X, r20
 a1e:	18 97       	sbiw	r26, 0x08	; 8
 a20:	de cf       	rjmp	.-68     	; 0x9de <OSTimeTick+0x4a>
 a22:	20 93 20 03 	sts	0x0320, r18
 a26:	08 95       	ret

00000a28 <OSStart>:
 a28:	80 91 89 02 	lds	r24, 0x0289
 a2c:	81 11       	cpse	r24, r1
 a2e:	08 95       	ret
 a30:	e0 91 20 03 	lds	r30, 0x0320
 a34:	f0 e0       	ldi	r31, 0x00	; 0
 a36:	e8 5f       	subi	r30, 0xF8	; 248
 a38:	fe 4f       	sbci	r31, 0xFE	; 254
 a3a:	a0 81       	ld	r26, Z
 a3c:	ea 2f       	mov	r30, r26
 a3e:	f0 e0       	ldi	r31, 0x00	; 0
 a40:	ef 5d       	subi	r30, 0xDF	; 223
 a42:	fc 4f       	sbci	r31, 0xFC	; 252
 a44:	e0 81       	ld	r30, Z
 a46:	f0 e0       	ldi	r31, 0x00	; 0
 a48:	e8 5f       	subi	r30, 0xF8	; 248
 a4a:	fe 4f       	sbci	r31, 0xFE	; 254
 a4c:	aa 0f       	add	r26, r26
 a4e:	aa 0f       	add	r26, r26
 a50:	aa 0f       	add	r26, r26
 a52:	80 81       	ld	r24, Z
 a54:	a8 0f       	add	r26, r24
 a56:	a0 93 8e 02 	sts	0x028E, r26
 a5a:	a0 93 8f 02 	sts	0x028F, r26
 a5e:	b0 e0       	ldi	r27, 0x00	; 0
 a60:	aa 0f       	add	r26, r26
 a62:	bb 1f       	adc	r27, r27
 a64:	ae 56       	subi	r26, 0x6E	; 110
 a66:	bb 4f       	sbci	r27, 0xFB	; 251
 a68:	8d 91       	ld	r24, X+
 a6a:	9c 91       	ld	r25, X
 a6c:	90 93 1f 03 	sts	0x031F, r25
 a70:	80 93 1e 03 	sts	0x031E, r24
 a74:	90 93 28 03 	sts	0x0328, r25
 a78:	80 93 27 03 	sts	0x0327, r24
 a7c:	0e 94 10 06 	call	0xc20	; 0xc20 <OSStartHighRdy>
 a80:	08 95       	ret

00000a82 <OSIntExit>:
 a82:	80 91 89 02 	lds	r24, 0x0289
 a86:	81 30       	cpi	r24, 0x01	; 1
 a88:	09 f0       	breq	.+2      	; 0xa8c <OSIntExit+0xa>
 a8a:	08 95       	ret
 a8c:	f8 94       	cli
 a8e:	80 91 26 03 	lds	r24, 0x0326
 a92:	88 23       	and	r24, r24
 a94:	39 f0       	breq	.+14     	; 0xaa4 <OSIntExit+0x22>
 a96:	81 50       	subi	r24, 0x01	; 1
 a98:	80 93 26 03 	sts	0x0326, r24
 a9c:	88 23       	and	r24, r24
 a9e:	11 f0       	breq	.+4      	; 0xaa4 <OSIntExit+0x22>
 aa0:	78 94       	sei
 aa2:	08 95       	ret
 aa4:	80 91 88 02 	lds	r24, 0x0288
 aa8:	88 23       	and	r24, r24
 aaa:	d1 f7       	brne	.-12     	; 0xaa0 <OSIntExit+0x1e>
 aac:	e0 91 20 03 	lds	r30, 0x0320
 ab0:	f0 e0       	ldi	r31, 0x00	; 0
 ab2:	e8 5f       	subi	r30, 0xF8	; 248
 ab4:	fe 4f       	sbci	r31, 0xFE	; 254
 ab6:	80 81       	ld	r24, Z
 ab8:	80 93 25 03 	sts	0x0325, r24
 abc:	e8 2f       	mov	r30, r24
 abe:	f0 e0       	ldi	r31, 0x00	; 0
 ac0:	ef 5d       	subi	r30, 0xDF	; 223
 ac2:	fc 4f       	sbci	r31, 0xFC	; 252
 ac4:	e0 81       	ld	r30, Z
 ac6:	f0 e0       	ldi	r31, 0x00	; 0
 ac8:	e8 5f       	subi	r30, 0xF8	; 248
 aca:	fe 4f       	sbci	r31, 0xFE	; 254
 acc:	98 2f       	mov	r25, r24
 ace:	99 0f       	add	r25, r25
 ad0:	99 0f       	add	r25, r25
 ad2:	99 0f       	add	r25, r25
 ad4:	80 81       	ld	r24, Z
 ad6:	98 0f       	add	r25, r24
 ad8:	90 93 8e 02 	sts	0x028E, r25
 adc:	80 91 8f 02 	lds	r24, 0x028F
 ae0:	98 17       	cp	r25, r24
 ae2:	f1 f2       	breq	.-68     	; 0xaa0 <OSIntExit+0x1e>
 ae4:	e9 2f       	mov	r30, r25
 ae6:	f0 e0       	ldi	r31, 0x00	; 0
 ae8:	ee 0f       	add	r30, r30
 aea:	ff 1f       	adc	r31, r31
 aec:	ee 56       	subi	r30, 0x6E	; 110
 aee:	fb 4f       	sbci	r31, 0xFB	; 251
 af0:	80 81       	ld	r24, Z
 af2:	91 81       	ldd	r25, Z+1	; 0x01
 af4:	90 93 1f 03 	sts	0x031F, r25
 af8:	80 93 1e 03 	sts	0x031E, r24
 afc:	80 91 12 03 	lds	r24, 0x0312
 b00:	90 91 13 03 	lds	r25, 0x0313
 b04:	a0 91 14 03 	lds	r26, 0x0314
 b08:	b0 91 15 03 	lds	r27, 0x0315
 b0c:	01 96       	adiw	r24, 0x01	; 1
 b0e:	a1 1d       	adc	r26, r1
 b10:	b1 1d       	adc	r27, r1
 b12:	80 93 12 03 	sts	0x0312, r24
 b16:	90 93 13 03 	sts	0x0313, r25
 b1a:	a0 93 14 03 	sts	0x0314, r26
 b1e:	b0 93 15 03 	sts	0x0315, r27
 b22:	0e 94 a7 06 	call	0xd4e	; 0xd4e <OSIntCtxSw>
 b26:	bc cf       	rjmp	.-136    	; 0xaa0 <OSIntExit+0x1e>

00000b28 <OSInit>:
 b28:	0e 94 da 00 	call	0x1b4	; 0x1b4 <OSInitHookBegin>
 b2c:	10 92 26 03 	sts	0x0326, r1
 b30:	10 92 88 02 	sts	0x0288, r1
 b34:	10 92 1d 03 	sts	0x031D, r1
 b38:	10 92 89 02 	sts	0x0289, r1
 b3c:	10 92 12 03 	sts	0x0312, r1
 b40:	10 92 13 03 	sts	0x0313, r1
 b44:	10 92 14 03 	sts	0x0314, r1
 b48:	10 92 15 03 	sts	0x0315, r1
 b4c:	10 92 8a 02 	sts	0x028A, r1
 b50:	10 92 8b 02 	sts	0x028B, r1
 b54:	10 92 8c 02 	sts	0x028C, r1
 b58:	10 92 8d 02 	sts	0x028D, r1
 b5c:	10 92 20 03 	sts	0x0320, r1
 b60:	10 92 21 03 	sts	0x0321, r1
 b64:	10 92 22 03 	sts	0x0322, r1
 b68:	10 92 8f 02 	sts	0x028F, r1
 b6c:	10 92 8e 02 	sts	0x028E, r1
 b70:	10 92 1f 03 	sts	0x031F, r1
 b74:	10 92 1e 03 	sts	0x031E, r1
 b78:	10 92 28 03 	sts	0x0328, r1
 b7c:	10 92 27 03 	sts	0x0327, r1
 b80:	10 92 91 02 	sts	0x0291, r1
 b84:	10 92 90 02 	sts	0x0290, r1
 b88:	e2 e9       	ldi	r30, 0x92	; 146
 b8a:	f4 e0       	ldi	r31, 0x04	; 4
 b8c:	11 92       	st	Z+, r1
 b8e:	11 92       	st	Z+, r1
 b90:	24 e0       	ldi	r18, 0x04	; 4
 b92:	ec 3a       	cpi	r30, 0xAC	; 172
 b94:	f2 07       	cpc	r31, r18
 b96:	d1 f7       	brne	.-12     	; 0xb8c <OSInit+0x64>
 b98:	81 ed       	ldi	r24, 0xD1	; 209
 b9a:	93 e0       	ldi	r25, 0x03	; 3
 b9c:	fc 01       	movw	r30, r24
 b9e:	3e 97       	sbiw	r30, 0x0e	; 14
 ba0:	91 83       	std	Z+1, r25	; 0x01
 ba2:	80 83       	st	Z, r24
 ba4:	40 96       	adiw	r24, 0x10	; 16
 ba6:	24 e0       	ldi	r18, 0x04	; 4
 ba8:	81 39       	cpi	r24, 0x91	; 145
 baa:	92 07       	cpc	r25, r18
 bac:	b9 f7       	brne	.-18     	; 0xb9c <OSInit+0x74>
 bae:	10 92 84 04 	sts	0x0484, r1
 bb2:	10 92 83 04 	sts	0x0483, r1
 bb6:	81 ec       	ldi	r24, 0xC1	; 193
 bb8:	93 e0       	ldi	r25, 0x03	; 3
 bba:	90 93 1b 03 	sts	0x031B, r25
 bbe:	80 93 1a 03 	sts	0x031A, r24
 bc2:	10 92 a9 03 	sts	0x03A9, r1
 bc6:	81 eb       	ldi	r24, 0xB1	; 177
 bc8:	93 e0       	ldi	r25, 0x03	; 3
 bca:	90 93 ae 03 	sts	0x03AE, r25
 bce:	80 93 ad 03 	sts	0x03AD, r24
 bd2:	10 92 b1 03 	sts	0x03B1, r1
 bd6:	08 96       	adiw	r24, 0x08	; 8
 bd8:	90 93 b6 03 	sts	0x03B6, r25
 bdc:	80 93 b5 03 	sts	0x03B5, r24
 be0:	40 97       	sbiw	r24, 0x10	; 16
 be2:	10 92 b9 03 	sts	0x03B9, r1
 be6:	10 92 be 03 	sts	0x03BE, r1
 bea:	10 92 bd 03 	sts	0x03BD, r1
 bee:	90 93 24 03 	sts	0x0324, r25
 bf2:	80 93 23 03 	sts	0x0323, r24
 bf6:	8c e3       	ldi	r24, 0x3C	; 60
 bf8:	92 e0       	ldi	r25, 0x02	; 2
 bfa:	60 e0       	ldi	r22, 0x00	; 0
 bfc:	70 e0       	ldi	r23, 0x00	; 0
 bfe:	48 ea       	ldi	r20, 0xA8	; 168
 c00:	53 e0       	ldi	r21, 0x03	; 3
 c02:	2c e0       	ldi	r18, 0x0C	; 12
 c04:	0e 94 f1 03 	call	0x7e2	; 0x7e2 <OSTaskCreate>
 c08:	84 e5       	ldi	r24, 0x54	; 84
 c0a:	93 e0       	ldi	r25, 0x03	; 3
 c0c:	60 e0       	ldi	r22, 0x00	; 0
 c0e:	70 e0       	ldi	r23, 0x00	; 0
 c10:	41 e1       	ldi	r20, 0x11	; 17
 c12:	53 e0       	ldi	r21, 0x03	; 3
 c14:	2b e0       	ldi	r18, 0x0B	; 11
 c16:	0e 94 f1 03 	call	0x7e2	; 0x7e2 <OSTaskCreate>
 c1a:	0e 94 db 00 	call	0x1b6	; 0x1b6 <OSInitHookEnd>
 c1e:	08 95       	ret

00000c20 <OSStartHighRdy>:
;                      c) Switch to the highest priority task.
;********************************************************************************************************

OSStartHighRdy: 
#if OS_TASK_SW_HOOK_EN > 0
	        call    OSTaskSwHook                ; Invoke user defined context switch hook
 c20:	0e 94 d7 00 	call	0x1ae	; 0x1ae <OSTaskSwHook>
#endif
                lds     R16,OSRunning               ; Indicate that we are multitasking
 c24:	00 91 89 02 	lds	r16, 0x0289
                inc     R16                         ;
 c28:	03 95       	inc	r16
                sts     OSRunning,R16               ;
 c2a:	00 93 89 02 	sts	0x0289, r16

                lds     R30,OSTCBHighRdy            ; Let Z point to TCB of highest priority task
 c2e:	e0 91 1e 03 	lds	r30, 0x031E
                lds     R31,OSTCBHighRdy+1          ; ready to run
 c32:	f0 91 1f 03 	lds	r31, 0x031F

                ld      R28,Z+                      ; Load stack L pointer
 c36:	c1 91       	ld	r28, Z+
                out     _SFR_IO_ADDR(SPL),R28
 c38:	cd bf       	out	0x3d, r28	; 61
                ld      R29,Z+                      ;
 c3a:	d1 91       	ld	r29, Z+
                out     _SFR_IO_ADDR(SPH),R29
 c3c:	de bf       	out	0x3e, r29	; 62

                POPSREG                             ; Pop the status register
 c3e:	0f 91       	pop	r16
 c40:	0f bf       	out	0x3f, r16	; 63
                POPRS                               ; Pop all registers
 c42:	0f 91       	pop	r16
 c44:	0b bf       	out	0x3b, r16	; 59
 c46:	ff 91       	pop	r31
 c48:	ef 91       	pop	r30
 c4a:	df 91       	pop	r29
 c4c:	cf 91       	pop	r28
 c4e:	bf 91       	pop	r27
 c50:	af 91       	pop	r26
 c52:	9f 91       	pop	r25
 c54:	8f 91       	pop	r24
 c56:	7f 91       	pop	r23
 c58:	6f 91       	pop	r22
 c5a:	5f 91       	pop	r21
 c5c:	4f 91       	pop	r20
 c5e:	3f 91       	pop	r19
 c60:	2f 91       	pop	r18
 c62:	1f 91       	pop	r17
 c64:	0f 91       	pop	r16
 c66:	ff 90       	pop	r15
 c68:	ef 90       	pop	r14
 c6a:	df 90       	pop	r13
 c6c:	cf 90       	pop	r12
 c6e:	bf 90       	pop	r11
 c70:	af 90       	pop	r10
 c72:	9f 90       	pop	r9
 c74:	8f 90       	pop	r8
 c76:	7f 90       	pop	r7
 c78:	6f 90       	pop	r6
 c7a:	5f 90       	pop	r5
 c7c:	4f 90       	pop	r4
 c7e:	3f 90       	pop	r3
 c80:	2f 90       	pop	r2
 c82:	1f 90       	pop	r1
 c84:	0f 90       	pop	r0
                ret                                 ; Start task
 c86:	08 95       	ret

00000c88 <OSCtxSw>:
;                                                R0
;                                                PCH
;                                                PCL                                     (High memory)
;********************************************************************************************************

OSCtxSw:        PUSHRS                              ; Save current tasks context
 c88:	0f 92       	push	r0
 c8a:	1f 92       	push	r1
 c8c:	2f 92       	push	r2
 c8e:	3f 92       	push	r3
 c90:	4f 92       	push	r4
 c92:	5f 92       	push	r5
 c94:	6f 92       	push	r6
 c96:	7f 92       	push	r7
 c98:	8f 92       	push	r8
 c9a:	9f 92       	push	r9
 c9c:	af 92       	push	r10
 c9e:	bf 92       	push	r11
 ca0:	cf 92       	push	r12
 ca2:	df 92       	push	r13
 ca4:	ef 92       	push	r14
 ca6:	ff 92       	push	r15
 ca8:	0f 93       	push	r16
 caa:	1f 93       	push	r17
 cac:	2f 93       	push	r18
 cae:	3f 93       	push	r19
 cb0:	4f 93       	push	r20
 cb2:	5f 93       	push	r21
 cb4:	6f 93       	push	r22
 cb6:	7f 93       	push	r23
 cb8:	8f 93       	push	r24
 cba:	9f 93       	push	r25
 cbc:	af 93       	push	r26
 cbe:	bf 93       	push	r27
 cc0:	cf 93       	push	r28
 cc2:	df 93       	push	r29
 cc4:	ef 93       	push	r30
 cc6:	ff 93       	push	r31
 cc8:	0b b7       	in	r16, 0x3b	; 59
 cca:	0f 93       	push	r16
                PUSHSREG                            ; Save SREG
 ccc:	0f b7       	in	r16, 0x3f	; 63
 cce:	0f 93       	push	r16

                lds     R30,OSTCBCur                ; Z = OSTCBCur->OSTCBStkPtr
 cd0:	e0 91 27 03 	lds	r30, 0x0327
                lds     R31,OSTCBCur+1              ;
 cd4:	f0 91 28 03 	lds	r31, 0x0328

                in      r28,_SFR_IO_ADDR(SPL)
 cd8:	cd b7       	in	r28, 0x3d	; 61
                st      Z+,R28                      ; Save Y (R29:R28) pointer
 cda:	c1 93       	st	Z+, r28
                in      r29,_SFR_IO_ADDR(SPH)
 cdc:	de b7       	in	r29, 0x3e	; 62
                st      Z+,R29                      ;
 cde:	d1 93       	st	Z+, r29

#if OS_TASK_SW_HOOK_EN > 0
                call    OSTaskSwHook                ; Call user defined task switch hook
 ce0:	0e 94 d7 00 	call	0x1ae	; 0x1ae <OSTaskSwHook>
#endif

                lds     R16,OSPrioHighRdy           ; OSPrioCur = OSPrioHighRdy
 ce4:	00 91 8e 02 	lds	r16, 0x028E
                sts     OSPrioCur,R16
 ce8:	00 93 8f 02 	sts	0x028F, r16

                lds     R30,OSTCBHighRdy            ; Let Z point to TCB of highest priority task
 cec:	e0 91 1e 03 	lds	r30, 0x031E
                lds     R31,OSTCBHighRdy+1          ; ready to run
 cf0:	f0 91 1f 03 	lds	r31, 0x031F
                sts     OSTCBCur,R30                ; OSTCBCur = OSTCBHighRdy
 cf4:	e0 93 27 03 	sts	0x0327, r30
                sts     OSTCBCur+1,R31              ;
 cf8:	f0 93 28 03 	sts	0x0328, r31

                ld      R28,Z+                      ; Restore Y pointer
 cfc:	c1 91       	ld	r28, Z+
                out     _SFR_IO_ADDR(SPL),R28
 cfe:	cd bf       	out	0x3d, r28	; 61
                ld      R29,Z+                      ;
 d00:	d1 91       	ld	r29, Z+
                out     _SFR_IO_ADDR(SPH),R29
 d02:	de bf       	out	0x3e, r29	; 62

                POPSREG                             ; Restore the status register
 d04:	0f 91       	pop	r16
 d06:	0f bf       	out	0x3f, r16	; 63
                POPRS                               ; Restore all registers
 d08:	0f 91       	pop	r16
 d0a:	0b bf       	out	0x3b, r16	; 59
 d0c:	ff 91       	pop	r31
 d0e:	ef 91       	pop	r30
 d10:	df 91       	pop	r29
 d12:	cf 91       	pop	r28
 d14:	bf 91       	pop	r27
 d16:	af 91       	pop	r26
 d18:	9f 91       	pop	r25
 d1a:	8f 91       	pop	r24
 d1c:	7f 91       	pop	r23
 d1e:	6f 91       	pop	r22
 d20:	5f 91       	pop	r21
 d22:	4f 91       	pop	r20
 d24:	3f 91       	pop	r19
 d26:	2f 91       	pop	r18
 d28:	1f 91       	pop	r17
 d2a:	0f 91       	pop	r16
 d2c:	ff 90       	pop	r15
 d2e:	ef 90       	pop	r14
 d30:	df 90       	pop	r13
 d32:	cf 90       	pop	r12
 d34:	bf 90       	pop	r11
 d36:	af 90       	pop	r10
 d38:	9f 90       	pop	r9
 d3a:	8f 90       	pop	r8
 d3c:	7f 90       	pop	r7
 d3e:	6f 90       	pop	r6
 d40:	5f 90       	pop	r5
 d42:	4f 90       	pop	r4
 d44:	3f 90       	pop	r3
 d46:	2f 90       	pop	r2
 d48:	1f 90       	pop	r1
 d4a:	0f 90       	pop	r0
                ret
 d4c:	08 95       	ret

00000d4e <OSIntCtxSw>:
                st      Z+,R29                      ;
#endif
;*********************************************************************************************************

#if OS_TASK_SW_HOOK_EN > 0
                call    OSTaskSwHook                ; Call user defined task switch hook
 d4e:	0e 94 d7 00 	call	0x1ae	; 0x1ae <OSTaskSwHook>
#endif
                lds     R16,OSPrioHighRdy           ; OSPrioCur = OSPrioHighRdy
 d52:	00 91 8e 02 	lds	r16, 0x028E
                sts     OSPrioCur,R16               ;
 d56:	00 93 8f 02 	sts	0x028F, r16

                lds     R30,OSTCBHighRdy            ; Z = OSTCBHighRdy->OSTCBStkPtr
 d5a:	e0 91 1e 03 	lds	r30, 0x031E
                lds     R31,OSTCBHighRdy+1          ;
 d5e:	f0 91 1f 03 	lds	r31, 0x031F
                sts     OSTCBCur,R30                ; OSTCBCur = OSTCBHighRdy
 d62:	e0 93 27 03 	sts	0x0327, r30
                sts     OSTCBCur+1,R31              ;
 d66:	f0 93 28 03 	sts	0x0328, r31

                ld      R28,Z+                      ; Restore Y pointer
 d6a:	c1 91       	ld	r28, Z+
                out     _SFR_IO_ADDR(SPL),R28
 d6c:	cd bf       	out	0x3d, r28	; 61
                ld      R29,Z+                      ;
 d6e:	d1 91       	ld	r29, Z+
                out     _SFR_IO_ADDR(SPH),R29
 d70:	de bf       	out	0x3e, r29	; 62

                POPSREG                             ; Restore the status register
 d72:	0f 91       	pop	r16
 d74:	0f bf       	out	0x3f, r16	; 63
                POPRS                               ; Restore all registers
 d76:	0f 91       	pop	r16
 d78:	0b bf       	out	0x3b, r16	; 59
 d7a:	ff 91       	pop	r31
 d7c:	ef 91       	pop	r30
 d7e:	df 91       	pop	r29
 d80:	cf 91       	pop	r28
 d82:	bf 91       	pop	r27
 d84:	af 91       	pop	r26
 d86:	9f 91       	pop	r25
 d88:	8f 91       	pop	r24
 d8a:	7f 91       	pop	r23
 d8c:	6f 91       	pop	r22
 d8e:	5f 91       	pop	r21
 d90:	4f 91       	pop	r20
 d92:	3f 91       	pop	r19
 d94:	2f 91       	pop	r18
 d96:	1f 91       	pop	r17
 d98:	0f 91       	pop	r16
 d9a:	ff 90       	pop	r15
 d9c:	ef 90       	pop	r14
 d9e:	df 90       	pop	r13
 da0:	cf 90       	pop	r12
 da2:	bf 90       	pop	r11
 da4:	af 90       	pop	r10
 da6:	9f 90       	pop	r9
 da8:	8f 90       	pop	r8
 daa:	7f 90       	pop	r7
 dac:	6f 90       	pop	r6
 dae:	5f 90       	pop	r5
 db0:	4f 90       	pop	r4
 db2:	3f 90       	pop	r3
 db4:	2f 90       	pop	r2
 db6:	1f 90       	pop	r1
 db8:	0f 90       	pop	r0
                ret
 dba:	08 95       	ret

00000dbc <OSTickISR>:
; won't get vectored.
;
;********************************************************************************************************
.global	SIG_OVERFLOW0
SIG_OVERFLOW0:
OSTickISR:      PUSHRS                              ; Save all registers
 dbc:	0f 92       	push	r0
 dbe:	1f 92       	push	r1
 dc0:	2f 92       	push	r2
 dc2:	3f 92       	push	r3
 dc4:	4f 92       	push	r4
 dc6:	5f 92       	push	r5
 dc8:	6f 92       	push	r6
 dca:	7f 92       	push	r7
 dcc:	8f 92       	push	r8
 dce:	9f 92       	push	r9
 dd0:	af 92       	push	r10
 dd2:	bf 92       	push	r11
 dd4:	cf 92       	push	r12
 dd6:	df 92       	push	r13
 dd8:	ef 92       	push	r14
 dda:	ff 92       	push	r15
 ddc:	0f 93       	push	r16
 dde:	1f 93       	push	r17
 de0:	2f 93       	push	r18
 de2:	3f 93       	push	r19
 de4:	4f 93       	push	r20
 de6:	5f 93       	push	r21
 de8:	6f 93       	push	r22
 dea:	7f 93       	push	r23
 dec:	8f 93       	push	r24
 dee:	9f 93       	push	r25
 df0:	af 93       	push	r26
 df2:	bf 93       	push	r27
 df4:	cf 93       	push	r28
 df6:	df 93       	push	r29
 df8:	ef 93       	push	r30
 dfa:	ff 93       	push	r31
 dfc:	0b b7       	in	r16, 0x3b	; 59
 dfe:	0f 93       	push	r16
                PUSHSREGISR                         ; Save SREG with I bit set!
 e00:	0f b7       	in	r16, 0x3f	; 63
 e02:	00 68       	ori	r16, 0x80	; 128
 e04:	0f 93       	push	r16

                lds     R16,OSIntNesting            ; Notify uC/OS-II of ISR
 e06:	00 91 26 03 	lds	r16, 0x0326
                inc     R16                         ;
 e0a:	03 95       	inc	r16
                sts     OSIntNesting,R16            ;
 e0c:	00 93 26 03 	sts	0x0326, r16
; You should disable the lines between #if 1 and #endif if you use uC/OS-II version 2.51 or below!
; (Unfortunately OS_VERSION is not defined here (how to do it elegantly? On possibility would be to
;  code this ISR with C in os_cpu_c.c or use inline assembler in os_cpu_c.c)
;*********************************************************************************************************
#if 1
                cpi     R16,0x01
 e10:	01 30       	cpi	r16, 0x01	; 1
                brne    _not_first_int
 e12:	41 f4       	brne	.+16     	; 0xe24 <_not_first_int>

                in      R28,_SFR_IO_ADDR(SPL)       ; Z = SP
 e14:	cd b7       	in	r28, 0x3d	; 61
                in      R29,_SFR_IO_ADDR(SPH)
 e16:	de b7       	in	r29, 0x3e	; 62
                lds     R30,OSTCBCur                ; Z = OSTCBCur->OSTCBStkPtr
 e18:	e0 91 27 03 	lds	r30, 0x0327
                lds     R31,OSTCBCur+1              ;
 e1c:	f0 91 28 03 	lds	r31, 0x0328
                st      Z+,R28                      ; Save Y pointer
 e20:	c1 93       	st	Z+, r28
                st      Z+,R29                      ;
 e22:	d1 93       	st	Z+, r29

00000e24 <_not_first_int>:
_not_first_int:
#endif
                ldi     R16,256-(CPU_CLOCK_HZ/OS_TICKS_PER_SEC/1024)   
 e24:	04 e6       	ldi	r16, 0x64	; 100
                                                    ; Reload timer to overflow at a rate of OS_TICKS_PER_SEC
                out     _SFR_IO_ADDR(TCNT0),R16     ; at a prescaler of 1024 and CPU_CLOCK_HZ AVR clock
 e26:	02 bf       	out	0x32, r16	; 50
	
                sei                                 ; Enable interrupts
 e28:	78 94       	sei
                
                call    OSTimeTick                  ; Call uC/OS-IIs tick updating function
 e2a:	0e 94 ca 04 	call	0x994	; 0x994 <OSTimeTick>
                nop
 e2e:	00 00       	nop
                call    OSIntExit                   ; Notify uC/OS-II about end of ISR
 e30:	0e 94 41 05 	call	0xa82	; 0xa82 <OSIntExit>

                POPSREG
 e34:	0f 91       	pop	r16
 e36:	0f bf       	out	0x3f, r16	; 63
                POPRS                               ; Restore all registers and status register
 e38:	0f 91       	pop	r16
 e3a:	0b bf       	out	0x3b, r16	; 59
 e3c:	ff 91       	pop	r31
 e3e:	ef 91       	pop	r30
 e40:	df 91       	pop	r29
 e42:	cf 91       	pop	r28
 e44:	bf 91       	pop	r27
 e46:	af 91       	pop	r26
 e48:	9f 91       	pop	r25
 e4a:	8f 91       	pop	r24
 e4c:	7f 91       	pop	r23
 e4e:	6f 91       	pop	r22
 e50:	5f 91       	pop	r21
 e52:	4f 91       	pop	r20
 e54:	3f 91       	pop	r19
 e56:	2f 91       	pop	r18
 e58:	1f 91       	pop	r17
 e5a:	0f 91       	pop	r16
 e5c:	ff 90       	pop	r15
 e5e:	ef 90       	pop	r14
 e60:	df 90       	pop	r13
 e62:	cf 90       	pop	r12
 e64:	bf 90       	pop	r11
 e66:	af 90       	pop	r10
 e68:	9f 90       	pop	r9
 e6a:	8f 90       	pop	r8
 e6c:	7f 90       	pop	r7
 e6e:	6f 90       	pop	r6
 e70:	5f 90       	pop	r5
 e72:	4f 90       	pop	r4
 e74:	3f 90       	pop	r3
 e76:	2f 90       	pop	r2
 e78:	1f 90       	pop	r1
 e7a:	0f 90       	pop	r0
                ret                                 ; Note: RET instead of RETI
 e7c:	08 95       	ret

00000e7e <__mulsi3>:
 e7e:	62 9f       	mul	r22, r18
 e80:	d0 01       	movw	r26, r0
 e82:	73 9f       	mul	r23, r19
 e84:	f0 01       	movw	r30, r0
 e86:	82 9f       	mul	r24, r18
 e88:	e0 0d       	add	r30, r0
 e8a:	f1 1d       	adc	r31, r1
 e8c:	64 9f       	mul	r22, r20
 e8e:	e0 0d       	add	r30, r0
 e90:	f1 1d       	adc	r31, r1
 e92:	92 9f       	mul	r25, r18
 e94:	f0 0d       	add	r31, r0
 e96:	83 9f       	mul	r24, r19
 e98:	f0 0d       	add	r31, r0
 e9a:	74 9f       	mul	r23, r20
 e9c:	f0 0d       	add	r31, r0
 e9e:	65 9f       	mul	r22, r21
 ea0:	f0 0d       	add	r31, r0
 ea2:	99 27       	eor	r25, r25
 ea4:	72 9f       	mul	r23, r18
 ea6:	b0 0d       	add	r27, r0
 ea8:	e1 1d       	adc	r30, r1
 eaa:	f9 1f       	adc	r31, r25
 eac:	63 9f       	mul	r22, r19
 eae:	b0 0d       	add	r27, r0
 eb0:	e1 1d       	adc	r30, r1
 eb2:	f9 1f       	adc	r31, r25
 eb4:	bd 01       	movw	r22, r26
 eb6:	cf 01       	movw	r24, r30
 eb8:	11 24       	eor	r1, r1
 eba:	08 95       	ret

00000ebc <__udivmodsi4>:
 ebc:	a1 e2       	ldi	r26, 0x21	; 33
 ebe:	1a 2e       	mov	r1, r26
 ec0:	aa 1b       	sub	r26, r26
 ec2:	bb 1b       	sub	r27, r27
 ec4:	fd 01       	movw	r30, r26
 ec6:	0d c0       	rjmp	.+26     	; 0xee2 <__udivmodsi4_ep>

00000ec8 <__udivmodsi4_loop>:
 ec8:	aa 1f       	adc	r26, r26
 eca:	bb 1f       	adc	r27, r27
 ecc:	ee 1f       	adc	r30, r30
 ece:	ff 1f       	adc	r31, r31
 ed0:	a2 17       	cp	r26, r18
 ed2:	b3 07       	cpc	r27, r19
 ed4:	e4 07       	cpc	r30, r20
 ed6:	f5 07       	cpc	r31, r21
 ed8:	20 f0       	brcs	.+8      	; 0xee2 <__udivmodsi4_ep>
 eda:	a2 1b       	sub	r26, r18
 edc:	b3 0b       	sbc	r27, r19
 ede:	e4 0b       	sbc	r30, r20
 ee0:	f5 0b       	sbc	r31, r21

00000ee2 <__udivmodsi4_ep>:
 ee2:	66 1f       	adc	r22, r22
 ee4:	77 1f       	adc	r23, r23
 ee6:	88 1f       	adc	r24, r24
 ee8:	99 1f       	adc	r25, r25
 eea:	1a 94       	dec	r1
 eec:	69 f7       	brne	.-38     	; 0xec8 <__udivmodsi4_loop>
 eee:	60 95       	com	r22
 ef0:	70 95       	com	r23
 ef2:	80 95       	com	r24
 ef4:	90 95       	com	r25
 ef6:	9b 01       	movw	r18, r22
 ef8:	ac 01       	movw	r20, r24
 efa:	bd 01       	movw	r22, r26
 efc:	cf 01       	movw	r24, r30
 efe:	08 95       	ret

00000f00 <_exit>:
 f00:	f8 94       	cli

00000f02 <__stop_program>:
 f02:	ff cf       	rjmp	.-2      	; 0xf02 <__stop_program>
